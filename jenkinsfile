pipeline{
agent any 

tools{
  jdk 'JDK'
  maven 'Maven'
  
}
environment {
      SONARQUBE = 'Sonar'
  }

  stages{
    stage('Git Checkout'){
    steps{
    echo 'Git Checkou7t'
    }
    
    }
    stage('Build App'){
    steps{
    echo 'Build App'
    sh 'mvn clean package -DskipTests' 
    }
    
    }
    stage('owasp scan'){
    steps{
    echo 'owasp scan'
    dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'OWASP-DC'
    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
    }
    
    }
    stage('Sonar scan'){
    steps{
    echo 'Sonar scan'
    withSonarQubeEnv('Sonar') {   // name must match Jenkins config
            sh 'mvn sonar:sonar -Dsonar.projectKey=Ekart -Dsonar.host.url=http://54.85.155.202:9000 -Dsonar.login=varsha'
        }
    }
  
  }
  }
}
